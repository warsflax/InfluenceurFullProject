@model Influenceur.Models.Identity

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Identity</h4>
<hr />
<div class="container px-4 py-5 mx-auto">
    <div class="card card1 mx-auto p-4">
        <!-- Ajout de mx-auto et p-4 pour centrer -->
        <div class="row justify-content-center">
            <div class="col-md-8">
                <!-- Réduction de la largeur du formulaire -->
                <div class="text-center mb-4">
                    <img id="logo" src="https://i.imgur.com/PSXxjNY.png" />
                    <h3 class="mt-3 heading">We are HussMons</h3>

                </div>

        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="UserId" class="control-label">User ID</label>
                        <input asp-for="UserId" class="form-control" value="@ViewBag.UserId" @*  readonly *@  />
                        <span asp-validation-for="UserId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="IdType" class="control-label">Your ID Type</label>
                        <select asp-for="IdType" class="form-control" id="IdTypeSelect">
                            <option value="passeport">Passport</option>
                            <option value="Carte_Nationnal">National ID</option>
                            <option value="Carte_Sejour">Residence Permit</option>
                        </select>
                        <span asp-validation-for="IdType" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="IdRectoImage" class="control-label">Your ID Front</label>
                        <input asp-for="IdRectoImage" type="file" class="form-control" />
                        <span asp-validation-for="IdRectoImage" class="text-danger"></span>
                    </div>

                    <div class="form-group" id="idVersoGroup">
                        <label asp-for="IdVersoImage" class="control-label">Your ID Back</label>
                        <input asp-for="IdVersoImage" type="file" class="form-control" />
                        <span asp-validation-for="IdVersoImage" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="SelfiImage" class="control-label">Selfie with Your ID</label>
                        <input asp-for="SelfiImage" type="file" class="form-control" />
                        <span asp-validation-for="SelfiImage" class="text-danger"></span>
                    </div>

           @*  <div class="form-group">
                <label class="control-label">Votre Id recto</label>

                <!-- Aperçu de la caméra -->
                <video id="video" width="100%" height="250" autoplay></video>

                <!-- Bouton pour prendre la photo -->
                <button type="button" class="btn btn-primary mt-2" id="captureBtn">Take Picture</button>

                <!-- Canvas caché pour stocker la photo -->
                <canvas id="canvas" style="display:none;"></canvas>

                <!-- Affichage de la photo capturée -->
                <img id="photo" style="display:none; width:100%; margin-top:10px;" />

                <!-- Input caché pour stocker l'image -->
                <input type="hidden" asp-for="SelfiImage" id="SelfiImageInput" />

                <span asp-validation-for="SelfiImage" class="text-danger"></span>
            </div>
            *@
            <div class="form-group">
                        <input type="submit" value="Finish" class="btn-block btn-color" />
            </div>
        </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
         const idTypeSelect = document.getElementById("IdTypeSelect");
         const idVersoGroup = document.getElementById("idVersoGroup");

         // Masquer ou afficher le champ "ID back" selon le type sélectionné
         idTypeSelect.addEventListener("change", function () {
             if (idTypeSelect.value === "passeport") {
                 idVersoGroup.style.display = "none"; // Masquer le champ ID verso
             } else {
                 idVersoGroup.style.display = "block"; // Afficher le champ ID verso
             }
         });

         // Initialisation pour masquer "ID back" si "Passeport" est déjà sélectionné
         if (idTypeSelect.value === "passeport") {
             idVersoGroup.style.display = "none";
         }
     });
    //  document.addEventListener("DOMContentLoaded", function () {
    //     const video = document.getElementById("video");
    //     const canvas = document.getElementById("canvas");
    //     const captureBtn = document.getElementById("captureBtn");
    //     const photo = document.getElementById("photo");
    //     const selfiImageInput = document.getElementById("SelfiImageInput");

    //     let stream;

    //     // Accéder à la caméra
    //     navigator.mediaDevices.getUserMedia({ video: true })
    //         .then(function (s) {
    //             stream = s;
    //             video.srcObject = stream;
    //         })
    //         .catch(function (err) {
    //             console.error("Erreur d'accès à la caméra : ", err);
    //         });

    //     // Prendre une photo
    //     captureBtn.addEventListener("click", function () {
    //         const context = canvas.getContext("2d");
    //         canvas.width = video.videoWidth;
    //         canvas.height = video.videoHeight;

    //         // Dessiner l'image sur le canvas
    //         context.drawImage(video, 0, 0, canvas.width, canvas.height);

    //         // Convertir en base64 et afficher l'aperçu
    //         const imageData = canvas.toDataURL("image/png");
    //         photo.src = imageData;
    //         photo.style.display = "block"; // Afficher l'image capturée
    //         selfiImageInput.value = imageData; // Stocker dans l'input caché

    //         // Arrêter la caméra après la capture
    //         stream.getTracks().forEach(track => track.stop());
    //         video.style.display = "none"; // Cacher la vidéo
    //         captureBtn.textContent = "Reprendre la photo"; // Changer le texte du bouton
    //     });

    //     // Permettre de reprendre la photo
    //     captureBtn.addEventListener("dblclick", function () {
    //         navigator.mediaDevices.getUserMedia({ video: true })
    //             .then(function (s) {
    //                 stream = s;
    //                 video.srcObject = stream;
    //                 video.style.display = "block"; // Afficher la vidéo
    //                 photo.style.display = "none"; // Cacher l'image capturée
    //                 captureBtn.textContent = "Take Picture"; // Revenir au texte initial
    //             })
    //             .catch(function (err) {
    //                 console.error("Erreur d'accès à la caméra : ", err);
    //             });
    //     });
    // });
</script>

<link href="~/css/style.css" rel="stylesheet" asp-append-version="true" />
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>